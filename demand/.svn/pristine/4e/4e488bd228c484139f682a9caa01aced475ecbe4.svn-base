<?php
/*
 * @开发工具: JetBrains PhpStorm.
 * @文件名：SystemController.class.php
 * @类功能: 需求管理
 * @开发者: cxl
 * @开发时间： 15-10-22
 * @版本：version 1.0
 */
namespace app\admin\controller;

use app\common\controller\AdminBaseController;
use app\common\enum\DemandStatus;
use app\common\enum\IsDelete;
use app\common\enum\PriorityLevel;
use app\common\enum\ProposeStatus;
use app\common\enum\TestAudit;
use app\common\ext\IDb;
use app\common\ext\IRequest;
use app\common\ext\ExportCom;
use app\common\ext\IWeChat;
use app\common\enum\HtmlEnumValue;
use app\common\enum\WeChatInformType;

class Allot extends AdminBaseController {
    /**
     * @功能：我的需求列表
     * @开发者：szg
     */
    public function demand_my_list(){
        //接收参数
        $demand_id = IRequest::get('demand_id');
        $project_id = IRequest::get('project_id');
        $demand_describe = IRequest::get('demand_describe');
        $demand_status = IRequest::get('demand_status');
        $priority_level = IRequest::get('priority_level');

        //取得登录管理员编号
        $admin_id = get_login_user_id();

        //取得项目记录
        $project_where['propose_status'] = ProposeStatus::OPEN;
        $project_where['charge_user_id'] = $admin_id;
        $project_list = IDb::getInstance('project')->setDbFiled("project_id,project_name")->setDbWhere($project_where)->sel();
        if ($project_list === false) {
            error('取得项目列表失败！');
        }

        //设置查询条件
        $demand_where['pt.propose_status'] = ProposeStatus::OPEN;
        $demand_where['dd.user_id'] = $admin_id;
        $demand_where['dd.demand_status'] = DemandStatus::IDENT;
        if (!empty($demand_id)) $demand_where['dd.demand_id'] = $demand_id;
        if (!empty($demand_describe))$demand_where['dd.demand_describe'] = array('like', "%{$demand_describe}%");
        if (!empty($project_id)) $demand_where['dd.project_id'] = $project_id;
        if (!empty($demand_status)) $demand_where['dd.demand_status'] = $demand_status;
        if (!empty($priority_level)) $demand_where['dd.priority_level'] = $priority_level;

        //取得数据
        $demand_list = IDb::getInstance('demand as dd')
            ->setDbFiled("dd.*,pt.test_user_id,pt.project_name")
            ->setDbJoin("project as pt", "dd.project_id=pt.project_id")
            ->setDbWhere($demand_where)
            ->setDbOrder('dd.demand_id desc')
            ->pag();

        //判断数据是否正常
        if ($demand_list === false) {
            error('获取需求列表有误！');
        }

        //页面赋值
        $this->assign('project_list', $project_list);
        $this->assign('demand_list', $demand_list);
        $this->assign('demand_id', $demand_id);
        $this->assign('project_id', $project_id);
        $this->assign('demand_describe', $demand_describe);
        $this->assign('demand_status', $demand_status);
        $this->assign('priority_level', $priority_level);

        //页面显示
        return view();
    }

    /**
     * @功能：添加需求
     * @开发者：szg
     */
    public function demand_add(){
        //查询条件
        $project_where['is_delete'] = IsDelete::No;
        $project_list = IDb::getInstance('project')->setDbWhere($project_where)->setDbOrder('project_id desc')->sel();
        if($project_list === false){
            error("获取项目列表错误！");
        }

        //模板渲染
        $this->assign('project_list',$project_list);

        //渲染模板输出
        return view();
    }

    /**
     * @功能：需求保存
     * 开发者：szg
     */
    public function demand_submit(){
        //接收参数
        $project_id = IRequest::get("project_id",IRequest::NOT_EMPTY,"请选择项目！");
        $demand_describe= IRequest::get("demand_describe",IRequest::NOT_EMPTY,"需求描述不能为空！");
        $demand_photo_url= IRequest::get("demand_photo_url");
        $priority_level= IRequest::get("priority_level",IRequest::NOT_EMPTY,"请选择优先级！");
        $remark = IRequest::get("remark");

        //判断等级
        $priority_describe = null;
        if($priority_level == PriorityLevel::URGENCYEST){
            $priority_describe = IRequest::get("priority_describe",IRequest::NOT_EMPTY,"特急说明不能为空！");
        }

        //取得用户信息
        $user_id = get_login_user_id();

        //新增保存
        $demand_data['user_id'] = $user_id;
        $demand_data['project_id'] = $project_id;
        $demand_data['demand_describe'] = $demand_describe;
        $demand_data['demand_photo_list'] = implode(",",$demand_photo_url);
        $demand_data['priority_level'] = $priority_level;
        $demand_data['priority_describe'] = $priority_describe;
        $demand_data['demand_status'] = DemandStatus::IDENT;
        $demand_data['remark'] = $remark;
        $demand_data['propose_time'] = get_date_time();
        $demand_id = IDb::getInstance("demand")->setDbData($demand_data)->add();
        if($demand_id === false){
            error("添加需求失败！");
        }

        //画面跳转
        $this->success("操作成功",Url("demand_my_list"));
    }

    /**
     * @功能：需求进度日志
     * 开发者：szg
     */
    public function demand_task(){
        //接收参数
        $demand_id = IRequest::get('demand_id',IRequest::NOT_EMPTY,"需求编号不能为空！");

        //取得需求数据
        $task_where['demand_id'] = $demand_id;
        $task_list = IDb::getInstance("task as tk")
            ->setDbJoin("user as ur","tk.user_id = ur.user_id")
            ->setDbWhere($task_where)
            ->pag();

        //设置layout
        $this->layout("layout_empty");

        //模板渲染
        $this->assign('task_list',$task_list);

        //渲染模板输出
        return view();
    }

    /**
     * @功能：需要分配的需求列表
     * @开发者：szg
     */
    public function demand_distribution_list(){
        //接收参数
        $demand_id = IRequest::get('demand_id');
        $project_id = IRequest::get('project_id');
        $demand_describe = IRequest::get('demand_describe');
        $proposer_name = IRequest::get('proposer_name');
        $demand_status = IRequest::get('demand_status');
        $priority_level = IRequest::get('priority_level');

        //取得登录管理员编号
        $admin_id = get_login_user_id();

        //取得项目记录
        $project_where['propose_status'] = ProposeStatus::OPEN;
        $project_where['charge_user_id'] = $admin_id;
        $project_list = IDb::getInstance('project')->setDbFiled("project_id,project_name")->setDbWhere($project_where)->sel();
        if($project_list === false){
            error('取得项目列表失败！');
        }

        //设置查询条件
        $demand_where['pt.propose_status'] = ProposeStatus::OPEN;
        $demand_where['pt.charge_user_id'] = $admin_id;
        $demand_where['dd.demand_status'] = DemandStatus::IDENT;
        if(!empty($demand_id))$demand_where['dd.demand_id'] = $demand_id;
        if(!empty($project_id))$demand_where['dd.project_id'] =$project_id;
        if(!empty($proposer_name))$demand_where['dd.proposer_name'] = array('like', "%{$proposer_name}%");
        if (!empty($demand_describe))$demand_where['dd.demand_describe'] = array('like', "%{$demand_describe}%");
        if(!empty($demand_status))$demand_where['dd.demand_status'] = $demand_status;
        if(!empty($priority_level))$demand_where['dd.priority_level'] = $priority_level;

        //取得数据
        $demand_list = IDb::getInstance('demand as dd')
            ->setDbFiled("dd.*,pt.test_user_id,pt.project_name,if(ur.real_name is null,ur.nickname,ur.real_name) as real_name,ur.phone")
            ->setDbJoin("project as pt","dd.project_id=pt.project_id")
            ->setDbJoin("user as ur","dd.user_id=ur.user_id")
            ->setDbWhere($demand_where)
            ->setDbOrder('dd.demand_id desc')
            ->pag();

        //判断数据是否正常
        if($demand_list === false){
            error('获取需求列表有误！');
        }

        //页面赋值
        $this->assign('project_list', $project_list);
        $this->assign('demand_list', $demand_list);
        $this->assign('demand_id', $demand_id);
        $this->assign('project_id', $project_id);
        $this->assign('demand_describe', $demand_describe);
        $this->assign('proposer_name', $proposer_name);
        $this->assign('demand_status', $demand_status);
        $this->assign('priority_level', $priority_level);

        //页面显示
        return view();
    }

    /**
     * @功能：需求详情
     * @开发者：szg
     */
    public function demand_info(){
        //接收参数
        $demand_id = IRequest::get('demand_id',IRequest::NOT_EMPTY,"需求编号不能为空！");

        //取得需求数据
        $demand_where['dd.demand_id'] = $demand_id;
        $demand_info = IDb::getInstance("demand as dd")
            ->setDbJoin("project as pt","dd.project_id = pt.project_id")
            ->setDbJoin("user as ur","pt.charge_user_id = ur.user_id")
            ->setDbWhere($demand_where)
            ->row();

        //判断数据是否存在
        if(empty($demand_info)){
            error("取得需求信息失败！");
        }

        //将图片转成数组
        $demand_info['demand_photo_list'] = explode(",",$demand_info['demand_photo_list']);
        $demand_info['design_list'] = explode(",",$demand_info['design_list']);
        $demand_info['development_list'] = explode(",",$demand_info['development_list']);
        $demand_info['test_list'] = explode(",",$demand_info['test_list']);

        //设置layout
        $this->layout("layout_empty");

        //模板渲染
        $this->assign('demand_id',$demand_id);
        $this->assign('demand_info',$demand_info);

        //渲染模板输出
        return view();
    }

    /**
     * @功能：需求审核
     * @开发者：szg
     */
    public function demand_auditing(){
        //接收参数
        $demand_id = IRequest::get('demand_id',IRequest::NOT_EMPTY,"需求编号不能为空！");

        //取得需求信息
        $demand_where['dd.demand_id'] = $demand_id;
        $demand_info = IDb::getInstance('demand as dd')
            ->setDbFiled("dd.*,project_name")
            ->setDbJoin("project as pt","dd.project_id = pt.project_id")
            ->setDbWhere($demand_where)
            ->row();

        //判断请求数据是否失败
        if ($demand_info === false){
            error('获取需求详情失败');
        }

        //判断状态
        if($demand_info['demand_status'] != DemandStatus::IDENT){
            error("需求已经审核不能重复审核！");
        }

        //取得管理员信息
        $user_where['an.is_delete'] = IsDelete::No;
        $user_list = IDb::getInstance('admin as an')
            ->setDbFiled("an.admin_type,ur.user_id,ur.nickname,ur.real_name")
            ->setDbJoin("user as ur","an.user_id=ur.user_id")
            ->setDbWhere($user_where)
            ->sel();

        //判断请求数据是否失败
        if ($user_list === false){
            error('获取需求详情失败2');
        }

        //整理数据
        $user_array = array();
        foreach($user_list as $item){
            if(empty($item['real_name'])){
                $user_array[$item['admin_type']][] = array("user_id" => $item['user_id'], "name" =>$item['nickname']);
            }else {
                $user_array[$item['admin_type']][] = array("user_id" => $item['user_id'], "name" =>$item['real_name']);
            }
        }

        //模板渲染
        $this->assign('demand_id',$demand_id);
        $this->assign('demand_info',$demand_info);
        $this->assign('user_list',$user_array);

        //渲染模板输出
        return view();
    }

    /**
     * @功能：需求开始提交
     * @开发者：szg
     */
    public function demand_auditing_submit(){
        //接收参数
        $demand_id = IRequest::get("demand_id",IRequest::NOT_EMPTY,"需求编号不能为空！");
        $demand_status = IRequest::get("demand_audit",IRequest::NOT_EMPTY,"请审核需求！");
        $design_list = IRequest::get("design_list");
        $development_list = IRequest::get("development_list");
        $test_list = IRequest::get("test_list");
        $demand_feedback = IRequest::get("demand_feedback");

        //判断需求是否已经分配
        $demand_where["demand_id"] = $demand_id;
        $demand_info = IDb::getInstance("demand")->setDbWhere($demand_where)->row();
        if($demand_info['demand_status'] != DemandStatus::IDENT){
            error("需求已经分配不能重复分配！");
        }

        //判断审核状态
        if($demand_status == DemandStatus::PROCEEDING){
            //判断时间状态
            $start_time = get_date_time();
            $expect_finish_time = IRequest::get("expect_finish_time",IRequest::NOT_EMPTY,"预计需求完成时间不能为空！");
            if(strtotime($expect_finish_time) <= strtotime($start_time)){
                error("预计时间不能小于当前时间！");
            }

            //整理变量
            $demand_data['demand_status'] = DemandStatus::PROCEEDING;
            $demand_data['expect_finish_time'] = $expect_finish_time;
        }else{
            //拒绝
            $demand_data['demand_status'] = DemandStatus::REFUSE;
        }

        //修改项目审核状态
        $demand_data['auditing_time'] = get_date_time();
        $demand_data['demand_feedback'] = $demand_feedback;
        $demand_data['design_list']=implode(",",$design_list);
        $demand_data['development_list']=implode(",",$development_list);
        $demand_data['test_list']=implode(",",$test_list);
        $demand_upd = IDb::getInstance("demand")->setDbWhere($demand_where)->setDbData($demand_data)->upd();
        if($demand_upd === false){
            error("修改项目信息失败！");
        }

        //操作成功开始发送对应通知
        $sendStart = '审核失败';
        $sendText = '审核失败请重新提交需求或联系执行人';
        if($demand_status == DemandStatus::PROCEEDING) {
            $sendStart = '审核成功';
            $sendText = '进行中-预计完成时间:'.$demand_data['expect_finish_time'];
        }

        //设置通知数据
        $sendData=array($demand_info['demand_describe'],$sendStart,$sendText);

        //发送通知给用户
        IWeChat::sendInform($demand_info['user_id'],WeChatInformType::State,$sendData,$demand_info['demand_id']);
        if($demand_status == DemandStatus::PROCEEDING) {
            //整理需要发送的人员名单
            $user_list = array_merge($design_list,$development_list,$test_list);

            //设置统计信息
            $sendText = '您被分配为需求参与人-预计完成时间:'.$demand_data['expect_finish_time'];

            //设置通知数据
            $sendData=array($demand_info['demand_describe'],$sendStart,$sendText);
            foreach ($user_list as $user_id){
                //发送通知给参与人
                IWeChat::sendInform($user_id,WeChatInformType::State,$sendData,$demand_info['demand_id']);
            }
        }

        //画面跳转
        $this->success("操作成功",Url("demand_list"));
    }

    /**
     * @功能：完成需求
     * @开发者：szg
     */
    public function demand_finish(){
        //接收参数
        $demand_id = IRequest::get("demand_id",IRequest::NOT_EMPTY,"需求编号不能为空！");

        //取得需求信息
        $demand_where["demand_id"] = $demand_id;
        $demand_data['finish_time'] = get_date_time();
        $demand_data['demand_status'] = "3";
        $demand_data['update_time']=get_date_time();
        $demand_upd = IDb::getInstance("demand")->setDbWhere($demand_where)->setDbData($demand_data)->upd();


        //操作成功开始发送对应通知
        //取得需求信息
        $demand_where["demand_id"] = $demand_id;
        $demand_info = IDb::getInstance("demand")->setDbWhere($demand_where)->row();
        
        $sendStart = '需求任务已完成';
        //设置通知数据
        $sendData=[
            $demand_info['demand_describe'],
            '完成时间:'.$demand_data['update_time'],
            $sendStart
        ];

        //发送通知
        IWeChat::sendInform($demand_info['user_id'],WeChatInformType::Complete,$sendData,$demand_info['demand_id']);

        if($demand_upd === false){
            error("修改项目信息失败！");
        }

        //画面跳转
        $this->success("操作成功",Url("demand_list"));
    }



    /**
     * 提交测试
     */
    public function demand_test(){
        //接收参数
        $demand_id = IRequest::get("demand_id",IRequest::NOT_EMPTY,"需求不能为空！");
        $where['demand_id'] = $demand_id;
        $demand_info = IDb::getInstance('demand')->setDbWhere($where)->row();
        if($demand_info === false){
            error("该项目尚未分配测试人员！");
        }
        $project_where['project_id'] = $demand_info['project_id'];
        $project_info = IDb::getInstance('project')->setDbWhere($project_where)->row();
        if($project_info === false){
            error("获取项目失败！");
        }
        $demand_info['test_id'] = $project_info['test_id'];
        $test_id = $demand_info['test_id'];
        if(empty($demand_info['test_id'])||$demand_info['test_id']==0){
            error("该项目尚未分配测试人员！");
        }

        $demand_where['demand_id']=$demand_id;
        $demand_data['update_time']=get_date_time();
        $demand_data['demand_status']=DemandStatus::TEST;
        $demand_upd = IDb::getInstance("demand")->setDbWhere($demand_where)->setDbData($demand_data)->upd();
        if($demand_upd === false){
            error("修改需求信息失败！");
        }

        //操作成功开始发送对应通知
        $sendStart = '待测试';
       $sendText = '尊敬的测试人员，您有新的测试需求。';

        //设置通知数据
        $sendData=[
            $demand_info['demand_describe'],
            $sendStart,
            $sendText
        ];
        //发送通知给测试人员
        IWeChat::sendInform($test_id,WeChatInformType::State,$sendData,$demand_info['demand_id']);
        //画面跳转
        $this->success("操作成功",Url("demand_list"));
    }

    /**
     * @功能：测试审核提交
     * @开发者：szg
     */
    public function demand_test_audit_submit(){
        //接收参数
        $demand_id = IRequest::get("demand_id",IRequest::NOT_EMPTY,"需求编号不能为空！");
        $test_audit = IRequest::get("test_audit",IRequest::NOT_EMPTY,"请审核需求！");
        $refuse_describe = IRequest::get("refuse_describe");
        //取得需求信息
        $demand_where["demand_id"] = $demand_id;
        $demand_info = IDb::getInstance("demand")->setDbWhere($demand_where)->row();

        if($test_audit == TestAudit::TestOk){
            if($demand_info!=true){
                error("查找需求信息失败！");
            }
            $demand_data['demand_status'] = DemandStatus::UP;
        }else{
            //拒绝
            $demand_data['demand_status'] = DemandStatus::PROCEEDING;
        }
        $demand_data['update_time']=get_date_time();
        $demand_upd = IDb::getInstance("demand")->setDbWhere($demand_where)->setDbData($demand_data)->upd();
        if($demand_upd === false){
            error("修改需求信息失败！");
        }

        if($test_audit == TestAudit::TestOk){
            //操作成功开始发送对应通知
            $sendStart = '需求可上架';
            $sendText = '测试通过，需求可上架：';

            $sendText = $sendText.$refuse_describe;
            //设置通知数据
            $sendData=[
                $demand_info['demand_describe'],
                $sendStart,
                $sendText
            ];
            //发送通知给负责人
            IWeChat::sendInform($demand_info['charge_id'],WeChatInformType::State,$sendData,$demand_info['demand_id']);
        }else{
            //操作成功开始发送对应通知
            $sendStart = '测试有bug';
            $sendText = '需求测试不通过：';

            $sendText = $sendText.$refuse_describe;
            //设置通知数据
            $sendData=[
                $demand_info['demand_describe'],
                $sendStart,
                $sendText
            ];
            //发送通知给负责人
            IWeChat::sendInform($demand_info['charge_id'],WeChatInformType::State,$sendData,$demand_info['demand_id']);
            $join_list = explode(",", $demand_info['join_id']);
            foreach ($join_list as $keys=>$join){
                //发送通知给参与人
                IWeChat::sendInform($join,WeChatInformType::State,$sendData,$demand_info['demand_id']);
            }
        }

        //画面跳转
        $this->success("操作成功",Url("demand_list"));
    }

    /**
     * @功能：测试审核
     * @开发者： szg
     */
    public function demand_test_audit(){
        //接收参数
        $demand_id = IRequest::get('demand_id',IRequest::NOT_EMPTY,"需求编号不能为空！");

        $demand_info = IDb::getInstance('demand as dd')
            ->setDbFiled("dd.*,project_name")
            ->setDbJoin("project as pt","dd.project_id = pt.project_id")
            ->setDbWhere(array('demand_id'=>$demand_id))
            ->row();
        if ($demand_info === false){
            error('获取需求详情失败');
        }

        $this->assign('demand_id',$demand_id);
        $this->assign('demand_info',$demand_info);
        //渲染模板输出
        return view();
    }


    /**
     * @功能：提交上架
     * @开发者： szg
     */
    public function demand_up(){
        //接收参数
        $demand_id = IRequest::get("demand_id",IRequest::NOT_EMPTY,"需求不能为空！");
        $where['demand_id'] = $demand_id;
        $demand_info = IDb::getInstance('demand')->setDbWhere($where)->row();
        if($demand_info === false){
            error("获取需求详情失败！");
        }

        $demand_where['demand_id']=$demand_id;
        $demand_data['update_time']=get_date_time();
        $demand_data['demand_status']=DemandStatus::DONE;
        $demand_upd = IDb::getInstance("demand")->setDbWhere($demand_where)->setDbData($demand_data)->upd();
        if($demand_upd === false){
            error("修改需求信息失败！");
        }

        //操作成功开始发送对应通知
        $sendStart = '需求完成';
        $sendText = '您提出的需求已完成，请验收！';

        //设置通知数据
        $sendData=[
            $demand_info['demand_describe'],
            $sendStart,
            $sendText
        ];

        //发送通知给用户
        IWeChat::sendInform($demand_info['user_id'],WeChatInformType::State,$sendData,$demand_info['demand_id']);
        //画面跳转
        $this->success("操作成功",Url("demand_list"));
    }

    /**
     * @功能：需求导出
     * @开发者： wdd
     */
    public function demand_export(){
        //接收参数
        //接收参数
        $demand_id = IRequest::get('demand_id');
        $project_id = IRequest::get('project_id');
        $proposer_name = IRequest::get('proposer_name');
        $demand_status = IRequest::get('demand_status');
        $priority_level = IRequest::get('priority_level');

        //查询条件
        $where = null;
        if(!empty($demand_id))$where['dd.demand_id'] = $demand_id;
        if(!empty($project_id))$where['dd.project_id'] =$project_id;
        if(!empty($proposer_name))$where['dd.proposer_name'] = array('like', "%{$proposer_name}%");
        if(!empty($demand_status))$where['dd.demand_status'] = $demand_status;
        if(!empty($priority_level))$where['dd.priority_level'] = $priority_level;

        $demand_list = IDb::getInstance('demand as dd')
            ->setDbFiled("dd.*,project_name")
            ->setDbJoin("project as pt","dd.project_id = pt.project_id")
            ->setDbWhere($where)
            ->setDbOrder('dd.demand_id desc')->sel();
        if($demand_list === false){
            error('获取需求列表有误！');
        }

        //将图片转成数组
        foreach ($demand_list as $key=>$demand){
            $demand_list[$key]['image_list'] = explode(",",$demand['demand_photo_url']);
        }



        //设置数据格式
        $line = array();
        $col_str = "需求编号,项目编号,项目名称,提出人，提出人手机号，需求描述,需求图片,提出时间,需求状态,优先级";
        $col = explode(',',$col_str);

        foreach ($demand_list as $k => $value) {
            $temp = [
                $value['demand_id'],
                $value['project_id'],
                $value['project_name'],
                $value['proposer_name'],
                $value['proposer_phone'],
                $value['demand_describe'],
                $value['demand_photo_url'],
                $value['propose_time'],
                HtmlEnumValue::$enum_value['demand_status'][$value['demand_status']],
                HtmlEnumValue::$enum_value['priority_level'][$value['priority_level']],
            ];
//            array_push($temp,$agent_account_event);
//            array_push($temp, $value['note']);
//            array_push($temp, isset($value['item_name']) ? $value['item_name'] : '--');
//            array_push($temp, $value['create_time']);

            $line[] = $temp;
        }

        //导出数据
//        IExcel::export("资金日志导出".date('YmdHis').".csv",$col,$line);
        ExportCom::export("需求列表导出".date('YmdHis').".xls",$col,$line);
    }

}
